# -*- coding: utf-8 -*-
"""lab_2_1_advanced_state

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KVs_hHMfJU0iaCQmzBb5D-Cse9GNe8M8
"""

# ==============================================================================
# 1. SETUP - INSTALL AND IMPORT LIBS
# ==============================================================================
!pip install langgraph langchain-core langchain-openai --quiet

from langgraph.prebuilt import create_react_agent
from langchain_core.messages import HumanMessage
from langchain_openai import ChatOpenAI
from langchain_core.tools import tool
from typing import TypedDict, Annotated, Sequence
from langchain_core.messages import BaseMessage
import operator
import os

try:
    from google.colab import userdata
    os.environ["OPENAI_API_KEY"] = userdata.get('OPENAI_API_KEY')
    print("✅ OpenAI API Key set successfully.")
except (ImportError, userdata.SecretNotFoundError):
    print("⚠️ API Key not found. Please set it in Colab Secrets.")

# ==============================================================================
# 2. DEFINE TOOLS AND CUSTOM STATE
# ==============================================================================
@tool
def get_leave_balance(employee_id: str) -> dict:
    """Gets the leave balance for a specified employee."""
    balances = {"emp_123": {"vacation": 15, "sick": 10}, "emp_456": {"vacation": 8, "sick": 12}}
    return balances.get(employee_id, {"error": "Employee not found."})

@tool
def submit_leave_request(employee_id: str, leave_type: str, days: int) -> str:
    """Submits a leave request for an employee."""
    return f"Leave request for {days} days of {leave_type} for employee {employee_id} has been submitted."

class HRAgentState(TypedDict):
    messages: Annotated[Sequence[BaseMessage], operator.add]
    employee_id: str
    employee_name: str
    user_role: str
    remaining_steps: int   # ✅ required for LangGraph ReAct agent

# ==============================================================================
# 3. CREATE AND RUN THE AGENT
# ==============================================================================
def main():
    print("--- Lab 2.1: Advanced State Management ---")
    model = ChatOpenAI(model="gpt-4o-mini", temperature=0)
    tools = [get_leave_balance, submit_leave_request]

    agent = create_react_agent(model, tools, state_schema=HRAgentState)

    initial_state = {
        "messages": [HumanMessage(content="What is my remaining vacation leave balance?")],
        "employee_id": "emp_123",
        "employee_name": "Alice",
        "user_role": "employee",
        "remaining_steps": 5,   # ✅ must be initialized
    }

    print("\nInvoking agent with initial custom state...")
    result = agent.invoke(initial_state)

    print(f"\n--- Agent Output ---")
    print("Final Message:")
    print(result["messages"][-1].content)
    print(f"Final Employee Name in State: {result['employee_name']}")
    print(f"Final User Role in State: {result['user_role']}")
    print("--------------------")

if __name__ == "__main__":
    main()